/*
Colors for this site:
    1: #eeeeee
    2: #32e0c4
    3: #393e46
    4: #222831
Option 2:
    1: #e7dfd5
    2: #84a9ac
    3: #3b6978
    4: #204051
Option 3:
    1. #cffffe
    2. #f9f7d9
    3. #fce2ce
    4. #ffc1f3
*/

body {
    margin: 0px;
    text-align: center;
    font-family: "Merriweather", serif;
    line-height: 2;
}

h1 {
    font-family: "Sacramento", cursive;
    margin: 50px auto 0 auto;
    /*
    We want to increase our font size. We could just use pixels, like so:
    font-size: 90px;
    But, that may vary depending on the browser configuration in which the page is viewed.
    So, we'll use percentage instead. It's important to remember that 100% = 16px.
    So, if we want 90px, we need (90 / 16) * 100 = 562.5%
    1em is equivilant to 100%. So, we could also use 5.625em as our unit.
    NOTE: The font size is calculated from the inherited size. Which means, that if the body's font
    size grows larger, the h1 size will grow accordingly. To overcome this, and avoid weird sizing,
    we use the 'rem' unit, which stands for 'root em'. This means that the 100% (16px) will never
    change, regardless of the parents.
    */
    font-size: 5.625rem;
    color: #66BFBF;
    /* Note that when specifying line-height, the preferred way it to write it without specifying the unit.
    When the unit is omitted in line-height, the default is no. of lines.*/
    line-height: 2;
}

h2 {
    font-family: "Montserrat", sans-serif;
    font-size: 2.5rem;
    color: #66BFBF;
    font-weight: normal;
}

h3 {
  color: #11999E;  
  font-family: "Montserrat", sans-serif;
}

hr {
    border-color: #EAF6F6;
    border: none;
    border-top: dotted;
    border-width: 5px;
    width: 3rem;
    margin: 50px auto;
}

.profile {
    width: 25%;
    margin: auto;
}

.profile-pic {
    /* NOTE: Width is set to 100%, so it will inherit the size from it's parent
    (profile container) */
    width: 100%;
    border-radius: 50%;
    margin-top: 50px;
}

.top-cloud {
    position: relative;
    /* NOTE: In this position and the next, I chose to completely ignore
    angela's solution. That's because she's using px relative to the page size,
    and that sucks if you have a bigger screen. So, I achieved similar result
    with different positioning- here the position is relative to the image size
    and not the container size (which changes according to the page). Since
    the image size never changes, it will always look nice.*/
    left: 200px;
    top: 10px;
}

.bottom-cloud {
    position: absolute;
    /* In here however, I just chose absolute with no values.
    I don't want to give any values since if I do, it will then seem fixed again
    and suck. Like that, the browser puts it where it would've been if static,
    but then completely ignores it when going to position the next element.*/
}

.skill-row {
    width: 50%;
    /* The thing is, when we set the width to 50%, it puts the elements in the left and not in the
    middle like we want. I thought that to overcome this, I could do:
    position: relative;
    left: 25%;
    Putting the element 25% to the middle, when it's 50% of the screen, leaves 25% at each side.
    However, there is a better way to solve it, like so.
    */
    margin: 100px auto;
    text-align: left;
}

.top-container {
    position: relative;
    padding-top: 200px;
    background-color: #EAF6F6;
}

.code-img {
    width: 25%;
    /* Remember that width is calculated from the width of the parent, not of the entire page */
    float: left;
    margin-right: 30px;
}

.chef-img {
    width: 25%;
    float: right;
    margin-left: 30px;
}

.pro {
    text-decoration: underline;
}

.contact-me {
    width: 50%;
    margin: auto;
}

.bottom-container {
    background-color: #66BFBF;
    padding-top: 30px;
    padding-bottom: 30px;
    line-height: 2;
}

.footer-link {
    color: #11999E;
    text-decoration: none;
    margin: 100px 10px;
    font-family: "Montserrat", sans-serif;
    font-weight: bold;
}

.footer-link:hover {
    color: #EAF6F6;
}


.copyright {
    color: #EAF6F6;
    font-size: 0.8rem;
}


.btn {
    background: #66BFBF;
    background-image: -webkit-linear-gradient(top, #66BFBF, #11999E);
    background-image: -moz-linear-gradient(top, #66BFBF, #11999E);
    background-image: -ms-linear-gradient(top, #66BFBF, #11999E);
    background-image: -o-linear-gradient(top, #66BFBF, #11999E);
    background-image: linear-gradient(to bottom, #66BFBF, #11999E);
    -webkit-border-radius: 20px;
    -moz-border-radius: 20px;
    border-radius: 10px;
    color: #EAF6F6;
    font-family: "Montserrat", sans-serif;
    font-size: 15px;
    font-weight: bolder;
    padding: 10px;
    border: solid #66BFBF 1px;
    text-decoration: none;
    display: inline-block;
    cursor: pointer;
    text-align: center;
    margin: 50px;
 }
 
 .btn:hover {
    border: solid #66BFBF 1px;
    background: #11999E;
    background-image: -webkit-linear-gradient(top, #11999E, #66BFBF);
    background-image: -moz-linear-gradient(top, #11999E, #66BFBF);
    background-image: -ms-linear-gradient(top, #11999E, #66BFBF);
    background-image: -o-linear-gradient(top, #11999E, #66BFBF);
    background-image: linear-gradient(to bottom, #11999E, #66BFBF);
    -webkit-border-radius: 20px;
    -moz-border-radius: 20px;
    border-radius: 10px;
    text-decoration: none;
 }
