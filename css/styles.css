/*
Colors for this site:
    1: #eeeeee
    2: #32e0c4
    3: #393e46
    4: #222831
Option 2:
    1: #e7dfd5
    2: #84a9ac
    3: #3b6978
    4: #204051
Option 3:
    1. #cffffe
    2. #f9f7d9
    3. #fce2ce
    4. #ffc1f3
*/

body {
    margin: 0px;
    text-align: center;
    font-family: "Merriweather", serif;
}

h1 {
    font-family: "Sacramento", cursive;
    margin: 50px auto 0 auto;
    /*
    We want to increase our font size. We could just use pixels, like so:
    font-size: 90px;
    But, that may vary depending on the browser configuration in which the page is viewed.
    So, we'll use percentage instead. It's important to remember that 100% = 16px.
    So, if we want 90px, we need (90 / 16) * 100 = 562.5%
    1em is equivilant to 100%. So, we could also use 5.625em as our unit.
    NOTE: The font size is calculated from the inherited size. Which means, that if the body's font
    size grows larger, the h1 size will grow accordingly. To overcome this, and avoid weird sizing,
    we use the 'rem' unit, which stands for 'root em'. This means that the 100% (16px) will never
    change, regardless of the parents.
    */
    font-size: 5.625rem;
}

h2 {
    font-family: "Montserrat", sans-serif;
    font-size: 2.5rem;
}

h3 {
    font-family: "Montserrat", sans-serif;
}

.profile-pic {
    height: 20%;
    width: 20%;
    border-radius: 50%;
}

.top-cloud {
    position: relative;
    /* NOTE: In this position and the next, I chose to completely ignore
    angela's solution. That's because she's using px relative to the page size,
    and that sucks if you have a bigger screen. So, I achieved similar result
    with different positioning- here the position is relative to the image size
    and not the container size (which changes according to the page). Since
    the image size never changes, it will always look nice.*/
    left: 200px;
    top: 10px;
}

.bottom-cloud {
    position: absolute;
    /* In here however, I just chose absolute with no values.
    I don't want to give any values since if I do, it will then seem fixed again
    and suck. Like that, the browser puts it where it would've been if static,
    but then completely ignores it when going to position the next element.*/
}

.top-container {
    position: relative;
    padding-top: 200px;
    background-color: #cffffe;
}

.pro {
    text-decoration: underline;
}
